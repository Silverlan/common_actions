name: 'Build Submodule'
description: 'Downloads and builds a git submodule'
inputs:
  repo:
    description: 'Repository Url'
    required: true
  repo_name:
    description: 'Name of the repository'
    required: true
  repo_branch:
    description: 'Branch to clone'
    required: true
    default: 'master'
  build_target:
    description: 'Main target to build'
    required: true
  build_dir:
    description: 'The directory to write the build files to'
    required: true
    default: 'build'
  root_dir:
    description: 'The directory in which the submodule should reside in'
    required: true
    default: 'third_party_libs'
runs:
  using: "composite"
  steps: 
    - name: Clone
      uses: Silverlan/common_actions/get_submodule@actions
      with:
        dir: '${{ inputs.root_dir }}'
        repo: ${{ inputs.repo }}
        repo_name: ${{ inputs.repo_name }}
        repo_branch: ${{ inputs.repo_branch }}

    - name: Build
      uses: Silverlan/common_actions/build_cmake@actions
      with:
        build_type: ${{ matrix.config.build_type }}
        build_generator: ${{ matrix.config.generators }}
        cmake_definitions: ${{ env.shared_cmake_definitions }} -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }}
        build_target: ${{ inputs.build_target }}
        build_dir: '${{ inputs.build_dir }}/${{ inputs.root_dir }}/${{ inputs.build_target }}'
        cmake_script_location: '${{ inputs.root_dir }}/${{ inputs.build_target }}'
  
